name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [v1.33.0]
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Setup Mise JDX
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
          echo "eval \"\$(mise activate bash)\"" >> ~/.bash_profile

      - name: Install Hex
        run: mise x elixir erlang -- mix local.hex --force

      - name: Setup Kind
        run: mise run setup-kind --image kindest/node:${{ matrix.k8s_version }}

      - name: Retrieve Build Cache
        uses: actions/cache@v4
        id: build-folder-cache
        with:
          path: _build
          key: ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Retrieve PLT Cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts

      - name: Install Mix Dependencies
        run: mise run deps

      - name: Check Formatting
        run: mise run format --check-formatted

      - name: Run Credo
        run: mise run credo

      - name: Run Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mise run integration-tests-ci

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mise run dialyzer --plt

      - name: Run dialyzer
        run: mise run dialyzer --format github
